{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Desktop\\\\submit\\\\my-app\\\\src\\\\KanbanBoard.js\";\nimport React from 'react';\nimport user from './user.png';\nimport emp from './empty-circle.png';\nimport yellowIcon from './yellow.png'; // Replace with the correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction KanbanBoard({\n  tickets,\n  groupingOption,\n  sortingOption\n}) {\n  const groupTickets = (tickets, groupingOption) => {\n    if (groupingOption === 'status') {\n      const grouped = {};\n      tickets.forEach(ticket => {\n        if (!grouped[ticket.status]) {\n          grouped[ticket.status] = [];\n        }\n        grouped[ticket.status].push(ticket);\n      });\n\n      // Add a \"yellow.png\" icon to the left of the \"In Progress\" group\n      if (grouped['In Progress']) {\n        grouped['In Progress'].unshift({\n          id: 'inProgressLabel',\n          status: 'In Progress',\n          isIcon: true\n        });\n      }\n      return grouped;\n    } else if (groupingOption === 'user') {\n      const grouped = {};\n      tickets.forEach(ticket => {\n        if (!grouped[ticket.userId]) {\n          grouped[ticket.userId] = [];\n        }\n        grouped[ticket.userId].push(ticket);\n      });\n      return grouped;\n    } else if (groupingOption === 'priority') {\n      const priorityGroups = {\n        0: 'No priority ',\n        1: 'Low ',\n        2: 'Medium ',\n        3: 'High ',\n        4: 'Urgent '\n      };\n      const grouped = {};\n      tickets.forEach(ticket => {\n        if (priorityGroups[ticket.priority]) {\n          const groupName = priorityGroups[ticket.priority];\n          if (!grouped[groupName]) {\n            grouped[groupName] = [];\n          }\n          grouped[groupName].push(ticket);\n        }\n      });\n      return grouped;\n    }\n  };\n  const sortTickets = (tickets, sortingOption) => {\n    if (sortingOption === 'priority') {\n      return [...tickets].sort((a, b) => b.priority - a.priority);\n    } else if (sortingOption === 'title') {\n      return [...tickets].sort((a, b) => a.title.localeCompare(b.title));\n    }\n  };\n  const groupedTickets = groupTickets(tickets, groupingOption);\n  const sortedTickets = sortTickets(tickets, sortingOption);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: Object.keys(groupedTickets).map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"group-header\",\n        children: groupedTickets[group][0].isIcon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: yellowIcon,\n            alt: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), \"In Progress\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [group, \" (\", groupedTickets[group].length, \") \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), sortedTickets.map(ticket => {\n        if (groupedTickets[group].includes(ticket)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ticket\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ticket-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ticket-id\",\n                children: ticket.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), ticket.isIcon ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: user,\n                alt: \"User\",\n                className: \"user-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: emp,\n                  alt: \"Empty\",\n                  className: \"emp-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: user,\n                  alt: \"User\",\n                  className: \"user-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ticket-title\",\n              children: ticket.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ticket-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Status: \", ticket.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Priority: \", ticket.priority]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"User: \", ticket.userId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ticket-tag\",\n                children: \"Feature Request\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, ticket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this);\n        }\n        return null;\n      })]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","user","emp","yellowIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanBoard","tickets","groupingOption","sortingOption","groupTickets","grouped","forEach","ticket","status","push","unshift","id","isIcon","userId","priorityGroups","priority","groupName","sortTickets","sort","a","b","title","localeCompare","groupedTickets","sortedTickets","className","children","Object","keys","map","group","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","includes","_c","$RefreshReg$"],"sources":["C:/Users/91831/Desktop/submit/my-app/src/KanbanBoard.js"],"sourcesContent":["import React from 'react';\r\nimport user from './user.png';\r\nimport emp from './empty-circle.png';\r\nimport yellowIcon from './yellow.png'; // Replace with the correct path\r\n\r\nfunction KanbanBoard({ tickets, groupingOption, sortingOption }) {\r\n  const groupTickets = (tickets, groupingOption) => {\r\n    if (groupingOption === 'status') {\r\n      const grouped = {};\r\n      tickets.forEach((ticket) => {\r\n        if (!grouped[ticket.status]) {\r\n          grouped[ticket.status] = [];\r\n        }\r\n        grouped[ticket.status].push(ticket);\r\n      });\r\n\r\n      // Add a \"yellow.png\" icon to the left of the \"In Progress\" group\r\n      if (grouped['In Progress']) {\r\n        grouped['In Progress'].unshift({ id: 'inProgressLabel', status: 'In Progress', isIcon: true });\r\n      }\r\n\r\n      return grouped;\r\n    } else if (groupingOption === 'user') {\r\n      const grouped = {};\r\n      tickets.forEach((ticket) => {\r\n        if (!grouped[ticket.userId]) {\r\n          grouped[ticket.userId] = [];\r\n        }\r\n        grouped[ticket.userId].push(ticket);\r\n      });\r\n      return grouped;\r\n    } else if (groupingOption === 'priority') {\r\n      const priorityGroups = {\r\n        0: 'No priority ',\r\n        1: 'Low ',\r\n        2: 'Medium ',\r\n        3: 'High ',\r\n        4: 'Urgent ',\r\n      };\r\n\r\n      const grouped = {};\r\n      tickets.forEach((ticket) => {\r\n        if (priorityGroups[ticket.priority]) {\r\n          const groupName = priorityGroups[ticket.priority];\r\n          if (!grouped[groupName]) {\r\n            grouped[groupName] = [];\r\n          }\r\n          grouped[groupName].push(ticket);\r\n        }\r\n      });\r\n\r\n      return grouped;\r\n    }\r\n  };\r\n\r\n  const sortTickets = (tickets, sortingOption) => {\r\n    if (sortingOption === 'priority') {\r\n      return [...tickets].sort((a, b) => b.priority - a.priority);\r\n    } else if (sortingOption === 'title') {\r\n      return [...tickets].sort((a, b) => a.title.localeCompare(b.title));\r\n    }\r\n  };\r\n\r\n  const groupedTickets = groupTickets(tickets, groupingOption);\r\n  const sortedTickets = sortTickets(tickets, sortingOption);\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      {Object.keys(groupedTickets).map((group, index) => (\r\n        <div key={index} className=\"group\">\r\n          <h2 className=\"group-header\">\r\n            {groupedTickets[group][0].isIcon ? (\r\n              <>\r\n                <img src={yellowIcon} alt=\"In Progress\" />\r\n                In Progress\r\n              </>\r\n            ) : (\r\n              <>\r\n                {group} ({groupedTickets[group].length}) <button className=\"add-button\">+</button>\r\n              </>\r\n            )}\r\n          </h2>\r\n          {sortedTickets.map((ticket) => {\r\n            if (groupedTickets[group].includes(ticket)) {\r\n              return (\r\n                <div key={ticket.id} className=\"ticket\">\r\n                  <div className=\"ticket-header\">\r\n                    <div className=\"ticket-id\">{ticket.id}</div>\r\n                    {ticket.isIcon ? (\r\n                      <img src={user} alt=\"User\" className=\"user-icon\" />\r\n                    ) : (\r\n                      <>\r\n                        <img src={emp} alt=\"Empty\" className=\"emp-icon\" />\r\n                        <img src={user} alt=\"User\" className=\"user-icon\" />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"ticket-title\">{ticket.title}</div>\r\n                  <div className=\"ticket-info\">\r\n                    <div>Status: {ticket.status}</div>\r\n                    <div>Priority: {ticket.priority}</div>\r\n                    <div>\r\n                      User: {ticket.userId}\r\n                      {/* <img src={user} alt=\"User\" className=\"user-icon\" /> */}\r\n                    </div>\r\n                    <div className=\"ticket-tag\">Feature Request</div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
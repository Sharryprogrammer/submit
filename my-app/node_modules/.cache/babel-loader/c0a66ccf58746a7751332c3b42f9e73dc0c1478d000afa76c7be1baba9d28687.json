{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Desktop\\\\submit\\\\my-app\\\\src\\\\KanbanBoard.js\";\n// KanbanBoard.js\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KanbanBoard({\n  tickets,\n  groupingOption,\n  sortingOption\n}) {\n  // Define functions for grouping and sorting tickets based on the options\n  const groupTickets = (tickets, groupingOption) => {\n    if (groupingOption === 'status') {\n      // Group by status\n      const grouped = {};\n      tickets.forEach(ticket => {\n        if (!grouped[ticket.status]) {\n          grouped[ticket.status] = [];\n        }\n        grouped[ticket.status].push(ticket);\n      });\n      return grouped;\n    } else if (groupingOption === 'user') {\n      // Group by user\n      const grouped = {};\n      tickets.forEach(ticket => {\n        if (!grouped[ticket.userId]) {\n          grouped[ticket.userId] = [];\n        }\n        grouped[ticket.userId].push(ticket);\n      });\n      return grouped;\n    } else if (groupingOption === 'priority') {\n      // Group by priority\n      const grouped = {};\n      tickets.forEach(ticket => {\n        if (!grouped[ticket.priority]) {\n          grouped[ticket.priority] = [];\n        }\n        grouped[ticket.priority].push(ticket);\n      });\n      return grouped;\n    }\n  };\n  const sortTickets = (tickets, sortingOption) => {\n    if (sortingOption === 'priority') {\n      // Sort by priority in descending order\n      return [...tickets].sort((a, b) => b.priority - a.priority);\n    } else if (sortingOption === 'title') {\n      // Sort by title in ascending order\n      return [...tickets].sort((a, b) => a.title.localeCompare(b.title));\n    }\n  };\n\n  // Group and sort the tickets\n  const groupedTickets = groupTickets(tickets, groupingOption);\n  const sortedTickets = sortTickets(tickets, sortingOption);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListsVisibility,\n        children: \"Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), areListsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lists\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Grouping: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleGroupingChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"status\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"user\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ordering: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleSortingChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {\n      tickets: tickets,\n      groupingOption: groupingOption,\n      sortingOption: sortingOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","KanbanBoard","tickets","groupingOption","sortingOption","groupTickets","grouped","forEach","ticket","status","push","userId","priority","sortTickets","sort","a","b","title","localeCompare","groupedTickets","sortedTickets","className","children","onClick","toggleListsVisibility","fileName","_jsxFileName","lineNumber","columnNumber","areListsVisible","onChange","e","handleGroupingChange","target","value","handleSortingChange","_c","$RefreshReg$"],"sources":["C:/Users/91831/Desktop/submit/my-app/src/KanbanBoard.js"],"sourcesContent":["// KanbanBoard.js\r\n\r\nimport React from 'react';\r\n\r\nfunction KanbanBoard({ tickets, groupingOption, sortingOption }) {\r\n  // Define functions for grouping and sorting tickets based on the options\r\n  const groupTickets = (tickets, groupingOption) => {\r\n    if (groupingOption === 'status') {\r\n      // Group by status\r\n      const grouped = {};\r\n      tickets.forEach((ticket) => {\r\n        if (!grouped[ticket.status]) {\r\n          grouped[ticket.status] = [];\r\n        }\r\n        grouped[ticket.status].push(ticket);\r\n      });\r\n      return grouped;\r\n    } else if (groupingOption === 'user') {\r\n      // Group by user\r\n      const grouped = {};\r\n      tickets.forEach((ticket) => {\r\n        if (!grouped[ticket.userId]) {\r\n          grouped[ticket.userId] = [];\r\n        }\r\n        grouped[ticket.userId].push(ticket);\r\n      });\r\n      return grouped;\r\n    } else if (groupingOption === 'priority') {\r\n      // Group by priority\r\n      const grouped = {};\r\n      tickets.forEach((ticket) => {\r\n        if (!grouped[ticket.priority]) {\r\n          grouped[ticket.priority] = [];\r\n        }\r\n        grouped[ticket.priority].push(ticket);\r\n      });\r\n      return grouped;\r\n    }\r\n  };\r\n\r\n  const sortTickets = (tickets, sortingOption) => {\r\n    if (sortingOption === 'priority') {\r\n      // Sort by priority in descending order\r\n      return [...tickets].sort((a, b) => b.priority - a.priority);\r\n    } else if (sortingOption === 'title') {\r\n      // Sort by title in ascending order\r\n      return [...tickets].sort((a, b) => a.title.localeCompare(b.title));\r\n    }\r\n  };\r\n\r\n  // Group and sort the tickets\r\n  const groupedTickets = groupTickets(tickets, groupingOption);\r\n  const sortedTickets = sortTickets(tickets, sortingOption);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"display\">\r\n        <button onClick={toggleListsVisibility}>Display</button>\r\n        {areListsVisible && (\r\n          <div className=\"lists\">\r\n            <label>Grouping: </label>\r\n            <select onChange={(e) => handleGroupingChange(e.target.value)}>\r\n              <option value=\"status\">Status</option>\r\n              <option value=\"user\">User</option>\r\n              <option value=\"priority\">Priority</option>\r\n            </select>\r\n            <label>Ordering: </label>\r\n            <select onChange={(e) => handleSortingChange(e.target.value)}>\r\n              <option value=\"priority\">Priority</option>\r\n              <option value=\"title\">Title</option>\r\n            </select>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <KanbanBoard tickets={tickets} groupingOption={groupingOption} sortingOption={sortingOption} />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC,cAAc;EAAEC;AAAc,CAAC,EAAE;EAC/D;EACA,MAAMC,YAAY,GAAGA,CAACH,OAAO,EAAEC,cAAc,KAAK;IAChD,IAAIA,cAAc,KAAK,QAAQ,EAAE;MAC/B;MACA,MAAMG,OAAO,GAAG,CAAC,CAAC;MAClBJ,OAAO,CAACK,OAAO,CAAEC,MAAM,IAAK;QAC1B,IAAI,CAACF,OAAO,CAACE,MAAM,CAACC,MAAM,CAAC,EAAE;UAC3BH,OAAO,CAACE,MAAM,CAACC,MAAM,CAAC,GAAG,EAAE;QAC7B;QACAH,OAAO,CAACE,MAAM,CAACC,MAAM,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;MACrC,CAAC,CAAC;MACF,OAAOF,OAAO;IAChB,CAAC,MAAM,IAAIH,cAAc,KAAK,MAAM,EAAE;MACpC;MACA,MAAMG,OAAO,GAAG,CAAC,CAAC;MAClBJ,OAAO,CAACK,OAAO,CAAEC,MAAM,IAAK;QAC1B,IAAI,CAACF,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC,EAAE;UAC3BL,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC,GAAG,EAAE;QAC7B;QACAL,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC,CAACD,IAAI,CAACF,MAAM,CAAC;MACrC,CAAC,CAAC;MACF,OAAOF,OAAO;IAChB,CAAC,MAAM,IAAIH,cAAc,KAAK,UAAU,EAAE;MACxC;MACA,MAAMG,OAAO,GAAG,CAAC,CAAC;MAClBJ,OAAO,CAACK,OAAO,CAAEC,MAAM,IAAK;QAC1B,IAAI,CAACF,OAAO,CAACE,MAAM,CAACI,QAAQ,CAAC,EAAE;UAC7BN,OAAO,CAACE,MAAM,CAACI,QAAQ,CAAC,GAAG,EAAE;QAC/B;QACAN,OAAO,CAACE,MAAM,CAACI,QAAQ,CAAC,CAACF,IAAI,CAACF,MAAM,CAAC;MACvC,CAAC,CAAC;MACF,OAAOF,OAAO;IAChB;EACF,CAAC;EAED,MAAMO,WAAW,GAAGA,CAACX,OAAO,EAAEE,aAAa,KAAK;IAC9C,IAAIA,aAAa,KAAK,UAAU,EAAE;MAChC;MACA,OAAO,CAAC,GAAGF,OAAO,CAAC,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACJ,QAAQ,GAAGG,CAAC,CAACH,QAAQ,CAAC;IAC7D,CAAC,MAAM,IAAIR,aAAa,KAAK,OAAO,EAAE;MACpC;MACA,OAAO,CAAC,GAAGF,OAAO,CAAC,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC,CAAC;IACpE;EACF,CAAC;;EAED;EACA,MAAME,cAAc,GAAGd,YAAY,CAACH,OAAO,EAAEC,cAAc,CAAC;EAC5D,MAAMiB,aAAa,GAAGP,WAAW,CAACX,OAAO,EAAEE,aAAa,CAAC;EAEzD,oBACEJ,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBtB,OAAA;QAAQuB,OAAO,EAAEC,qBAAsB;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvDC,eAAe,iBACd7B,OAAA;QAAKqB,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpBtB,OAAA;UAAAsB,QAAA,EAAO;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzB5B,OAAA;UAAQ8B,QAAQ,EAAGC,CAAC,IAAKC,oBAAoB,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAAAZ,QAAA,gBAC5DtB,OAAA;YAAQkC,KAAK,EAAC,QAAQ;YAAAZ,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtC5B,OAAA;YAAQkC,KAAK,EAAC,MAAM;YAAAZ,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClC5B,OAAA;YAAQkC,KAAK,EAAC,UAAU;YAAAZ,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACT5B,OAAA;UAAAsB,QAAA,EAAO;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzB5B,OAAA;UAAQ8B,QAAQ,EAAGC,CAAC,IAAKI,mBAAmB,CAACJ,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAAAZ,QAAA,gBAC3DtB,OAAA;YAAQkC,KAAK,EAAC,UAAU;YAAAZ,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1C5B,OAAA;YAAQkC,KAAK,EAAC,OAAO;YAAAZ,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN5B,OAAA,CAACC,WAAW;MAACC,OAAO,EAAEA,OAAQ;MAACC,cAAc,EAAEA,cAAe;MAACC,aAAa,EAAEA;IAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5F,CAAC;AAGV;AAACQ,EAAA,GA1EQnC,WAAW;AA4EpB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
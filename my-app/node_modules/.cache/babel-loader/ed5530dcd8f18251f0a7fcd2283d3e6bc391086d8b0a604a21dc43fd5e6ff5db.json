{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91831\\\\Desktop\\\\submit\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport KanbanBoard from './KanbanBoard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [sortingOption, setSortingOption] = useState('priority');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // Define the missing state variable 'areListsVisible' and its setter function\n  const [areListsVisible, setAreListsVisible] = useState(false);\n\n  // Fetch data from the API using useEffect\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setTickets(data.tickets);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Define event handlers for grouping and sorting options\n  const handleGroupingChange = option => {\n    setGroupingOption(option);\n  };\n  const handleSortingChange = option => {\n    setSortingOption(option);\n  };\n\n  // Define the missing 'toggleListsVisibility' function\n  const toggleListsVisibility = () => {\n    setAreListsVisible(!areListsVisible);\n  };\n\n  // Inside your App component's render method\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      classname: \"navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {\n      tickets: tickets,\n      groupingOption: groupingOption,\n      sortingOption: sortingOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"FyX/FPGD2Y9WlrOOE49xo8EQ7Z0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","KanbanBoard","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","groupingOption","setGroupingOption","sortingOption","setSortingOption","isModalOpen","setIsModalOpen","areListsVisible","setAreListsVisible","fetchData","response","fetch","ok","Error","data","json","error","console","handleGroupingChange","option","handleSortingChange","toggleListsVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","classname","_c","$RefreshReg$"],"sources":["C:/Users/91831/Desktop/submit/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport KanbanBoard from './KanbanBoard';\nimport './App.css';\n\nfunction App() {\n  const [tickets, setTickets] = useState([]);\n  const [groupingOption, setGroupingOption] = useState('status');\n  const [sortingOption, setSortingOption] = useState('priority');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // Define the missing state variable 'areListsVisible' and its setter function\n  const [areListsVisible, setAreListsVisible] = useState(false);\n\n  // Fetch data from the API using useEffect\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setTickets(data.tickets);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Define event handlers for grouping and sorting options\n  const handleGroupingChange = (option) => {\n    setGroupingOption(option);\n  };\n\n  const handleSortingChange = (option) => {\n    setSortingOption(option);\n  };\n\n  // Define the missing 'toggleListsVisibility' function\n  const toggleListsVisibility = () => {\n    setAreListsVisible(!areListsVisible);\n  };\n\n// Inside your App component's render method\nreturn (\n\n  <div className=\"app\">\n  <nav className=\"navbar\">\n     \n    </nav>\n  <nav classname=\"navbar\">\n\n</nav>\n    <KanbanBoard tickets={tickets} groupingOption={groupingOption} sortingOption={sortingOption} />\n  </div>\n);\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EAC9D,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,UAAU,CAAC;EAC9D,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrD;EACA,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAA0D,CAAC;QACxF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCf,UAAU,CAACc,IAAI,CAACf,OAAO,CAAC;MAC1B,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,oBAAoB,GAAIC,MAAM,IAAK;IACvCjB,iBAAiB,CAACiB,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,mBAAmB,GAAID,MAAM,IAAK;IACtCf,gBAAgB,CAACe,MAAM,CAAC;EAC1B,CAAC;;EAED;EACA,MAAME,qBAAqB,GAAGA,CAAA,KAAM;IAClCb,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;;EAEH;EACA,oBAEEX,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpB3B,OAAA;MAAK0B,SAAS,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB,CAAC,eACR/B,OAAA;MAAKgC,SAAS,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpB,CAAC,eACF/B,OAAA,CAACF,WAAW;MAACK,OAAO,EAAEA,OAAQ;MAACE,cAAc,EAAEA,cAAe;MAACE,aAAa,EAAEA;IAAc;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5F,CAAC;AAGR;AAAC7B,EAAA,CAtDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}